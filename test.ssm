ldc 0
ldc 0
ldc 0
stmh 3
annote HP -3 -3 black "free block"
annote HP -2 -2 red "next free block"
annote HP -1 -1 black "-"
ldc 1
sub
str R7
ajs 0
ldr SP
str R5
bra __end_free
_refplus:
link 0
ldl -2
ldc 0
lt
brf __endrefplus
ldl -2
ldc 2147483647
sub
lda -1
ldc 1
add
ldl -2
ldc 2147483647
sub
sta -1
__endrefplus:
unlink
ret
_refmin:
link 0
ldl -2
ldc 0
lt
brf __endrefmin
ldl -2
ldc 2147483647
sub
lda -1
ldc 1
sub
lds 0
ldc 0
eq
brf _afterfree
ajs -1
ldl -2
ldc 2147483647
sub
bsr _free
bra __endrefmin
_afterfree:
ldl -2
ldc 2147483647
sub
sta -1
__endrefmin:
unlink
ret
__aborthead:
ldc 10
trap 1
ldc 46
trap 1
ldc 104
trap 1
ldc 100
trap 1
ldc 32
trap 1
ldc 111
trap 1
ldc 110
trap 1
ldc 32
trap 1
ldc 91
trap 1
ldc 93
trap 1
ldc 10
trap 1
ldc -1
ldc -1
sta 0; generate error to avoid 'machine halted'
halt
__aborttail:
ldc 10
trap 1
ldc 46
trap 1
ldc 116
trap 1
ldc 108
trap 1
ldc 32
trap 1
ldc 111
trap 1
ldc 110
trap 1
ldc 32
trap 1
ldc 91
trap 1
ldc 93
trap 1
ldc 10
trap 1
ldc -1
ldc -1
sta 0; generate error to avoid 'machine halted'
halt
_malloc:
ldr R7
str RR
ldc 0
ldr R7
sta -1
annote R7 -1 -1 black "refcount"
annote R7 0 0 red "value1"
annote R7 1 1 red "value2"
ldr R7
lda 0
lds 0
ldc 0
eq 0
brf _endmalloc
ajs -1
ldc 0
ldc 0
ldc 0
stmh 3
annote HP -3 -3 black "free block"
annote HP -2 -2 red "next free block"
annote HP -1 -1 black "-"
ldc 1
sub
_endmalloc:
str R7
ret
_free:
link 0
ldl -2
ldma 0 2
bsr _refmin
ajs -1
bsr _refmin
ajs -1
ldc 0
ldr R7
ldl -2
stma -1 2
ldl -2
str R7
annote R7 -1 -1 black "free block"
annote R7 0 0 red "Next free block"
annote R7 1 1 red "-"
unlink
ret
__end_free:
bra __endabs
abs: link 0
ldl -2
bsr _refplus
ajs -1
annote MP -2 -2 green "Function argument n"
ldl -2
ldc 2
mul
ldc 2
div
ldc 0
ldc 2
mul
ldc 2
div
lt
ldc 2147483647
and
annote SP 0 0 red "Result of lt"
brf abs_75_27iff
ldl -2
ldc 2
mul
ldc 2
div
neg
ldc 2147483647
and
annote SP 0 0 red "Result of -x"
str RR
bra _abs_ret
bra abs_75_27ife
abs_75_27iff:
ldl -2
str RR
bra _abs_ret
abs_75_27ife:
_abs_ret:
ldl -2
bsr _refmin
unlink
ret
__endabs:
bra __endappend
append: link 0
ldl -2
bsr _refplus
ajs -1
annote MP -2 -2 green "Function argument l1"
ldl -3
bsr _refplus
ajs -1
annote MP -3 -3 green "Function argument l2"
ldl -2
ldl -2
ldc 0
eq
str RR
ldr RR
brf append_92_5iff
ldl -3
str RR
bra _append_ret
bra append_92_5ife
append_92_5iff:
ldl -3
ldl -2
lds 0
ldc 0
eq
brt __aborttail
ldc 2147483647
sub
ldh 1
annote SP 0 0 black ".tl value"
bsr append
ajs -2
ldr RR
bsr _refplus
ldl -2
ldc 2147483647
sub
lds 0
lda 1
bsr _refmin
ajs -1
sta 1
ldl -2
str RR
bra _append_ret
append_92_5ife:
_append_ret:
ldl -2
bsr _refmin
ldl -3
bsr _refmin
unlink
ret
__endappend:
bra __endfacI
facI: link 1
ldl -2
bsr _refplus
ajs -1
annote MP -2 -2 green "Function argument n"
ldc 1
bsr _refplus
stl 1
annote MP 1 1 green "Local variable r"
facI_16_5whilestart:
ldl -2
ldc 2
mul
ldc 2
div
ldc 1
ldc 2
mul
ldc 2
div
gt
ldc 2147483647
and
annote SP 0 0 red "Result of gt"
brf facI_16_5whileend
ldl 1
ldc 2
mul
ldc 2
div
ldl -2
ldc 2
mul
ldc 2
div
mul
ldc 2147483647
and
annote SP 0 0 red "Result of mul"
ldl 1
str R6
bsr _refplus
stl 1
ldr R6
bsr _refmin
ajs -1
ldl -2
ldc 2
mul
ldc 2
div
ldc 1
ldc 2
mul
ldc 2
div
sub
ldc 2147483647
and
annote SP 0 0 red "Result of sub"
ldl -2
str R6
bsr _refplus
stl -2
ldr R6
bsr _refmin
ajs -1
bra facI_16_5whilestart
facI_16_5whileend:
ldl 1
str RR
bra _facI_ret
_facI_ret:
ldl -2
bsr _refmin
ldl 1
bsr _refmin
unlink
ret
__endfacI:
bra __endproduct
product: link 0
ldl -2
bsr _refplus
ajs -1
annote MP -2 -2 green "Function argument list"
ldl -2
ldl -2
ldc 0
eq
str RR
ldr RR
brf product_48_5iff
ldc 1
str RR
bra _product_ret
bra product_48_5ife
product_48_5iff:
ldl -2
lds 0
ldc 0
eq
brt __aborthead
ldc 2147483647
sub
ldh 0
annote SP 0 0 black ".hd value"
ldc 2
mul
ldc 2
div
ldl -2
lds 0
ldc 0
eq
brt __aborttail
ldc 2147483647
sub
ldh 1
annote SP 0 0 black ".tl value"
bsr product
ajs -1
ldr RR
ldc 2
mul
ldc 2
div
mul
ldc 2147483647
and
annote SP 0 0 red "Result of mul"
str RR
bra _product_ret
product_48_5ife:
_product_ret:
ldl -2
bsr _refmin
unlink
ret
__endproduct:
bra __endfromTo
fromTo: link 0
ldl -2
bsr _refplus
ajs -1
annote MP -2 -2 green "Function argument from"
ldl -3
bsr _refplus
ajs -1
annote MP -3 -3 green "Function argument to"
ldl -2
ldc 2
mul
ldc 2
div
ldl -3
ldc 2
mul
ldc 2
div
le
ldc 2147483647
and
annote SP 0 0 red "Result of le"
brf fromTo_57_5iff
ldl -2
ldl -3
ldl -2
ldc 2
mul
ldc 2
div
ldc 1
ldc 2
mul
ldc 2
div
add
ldc 2147483647
and
annote SP 0 0 red "Result of add"
bsr fromTo
ajs -2
ldr RR
bsr _refplus
bsr _malloc
ldr RR
stma 0 2
annote RR 0 0 black "list value"
annote RR 1 1 red "list pointer"
ldr RR
annote SP 0 0 red "Allocated on heap"
ldc 2147483647
add
str RR
bra _fromTo_ret
bra fromTo_57_5ife
fromTo_57_5iff:
ldc 0
str RR
bra _fromTo_ret
fromTo_57_5ife:
_fromTo_ret:
ldl -2
bsr _refmin
ldl -3
bsr _refmin
unlink
ret
__endfromTo:
bra __endfacL
facL: link 0
ldl -2
bsr _refplus
ajs -1
annote MP -2 -2 green "Function argument n"
ldl -2
ldc 1
bsr fromTo
ajs -2
ldr RR
bsr product
ajs -1
ldr RR
str RR
bra _facL_ret
_facL_ret:
ldl -2
bsr _refmin
unlink
ret
__endfacL:
bra __endfacR
facR: link 0
ldl -2
bsr _refplus
ajs -1
annote MP -2 -2 green "Function argument n"
ldl -2
ldc 2
mul
ldc 2
div
ldc 2
ldc 2
mul
ldc 2
div
lt
ldc 2147483647
and
annote SP 0 0 red "Result of lt"
brf facR_6_5iff
ldc 1
str RR
bra _facR_ret
bra facR_6_5ife
facR_6_5iff:
ldl -2
ldc 2
mul
ldc 2
div
ldl -2
ldc 2
mul
ldc 2
div
ldc 1
ldc 2
mul
ldc 2
div
sub
ldc 2147483647
and
annote SP 0 0 red "Result of sub"
bsr facR
ajs -1
ldr RR
ldc 2
mul
ldc 2
div
mul
ldc 2147483647
and
annote SP 0 0 red "Result of mul"
str RR
bra _facR_ret
facR_6_5ife:
_facR_ret:
ldl -2
bsr _refmin
unlink
ret
__endfacR:
bra __endlength
length: link 1
ldl -2
bsr _refplus
ajs -1
annote MP -2 -2 green "Function argument lst"
ldc 0
bsr _refplus
stl 1
annote MP 1 1 green "Local variable l"
length_110_43whilestart:
ldl -2
ldl -2
ldc 0
eq
str RR
ldr RR
ldc 0
eq
ldc 2147483647
and
annote SP 0 0 black ".tl value"
brf length_110_43whileend
ldl 1
ldc 2
mul
ldc 2
div
ldc 1
ldc 2
mul
ldc 2
div
add
ldc 2147483647
and
annote SP 0 0 red "Result of add"
ldl 1
str R6
bsr _refplus
stl 1
ldr R6
bsr _refmin
ajs -1
ldl -2
lds 0
ldc 0
eq
brt __aborttail
ldc 2147483647
sub
ldh 1
annote SP 0 0 black ".tl value"
ldl -2
str R6
bsr _refplus
stl -2
ldr R6
bsr _refmin
ajs -1
bra length_110_43whilestart
length_110_43whileend:
ldl 1
str RR
bra _length_ret
_length_ret:
ldl 1
bsr _refmin
ldl -2
bsr _refmin
unlink
ret
__endlength:
bra __endmain
main: link 3
ldc 0
bsr _refplus
stl 1
annote MP 1 1 green "Local variable n"
ldc 1
bsr _refplus
stl 2
annote MP 2 2 green "Local variable facN"
ldc 2147483647
bsr _refplus
stl 3
annote MP 3 3 green "Local variable ok"
main_29_5whilestart:
ldl 1
ldc 2
mul
ldc 2
div
ldc 20
ldc 2
mul
ldc 2
div
lt
ldc 2147483647
and
annote SP 0 0 red "Result of lt"
brf main_29_5whileend
ldl 1
bsr facR
ajs -1
ldr RR
ldl 2
str R6
bsr _refplus
stl 2
ldr R6
bsr _refmin
ajs -1
ldl 2
ldc 2
mul
ldc 2
div
ldl 1
bsr facI
ajs -1
ldr RR
ldc 2
mul
ldc 2
div
ne
ldc 2147483647
and
annote SP 0 0 red "Result of ne"
ldc 2
mul
ldc 2
div
ldl 2
ldc 2
mul
ldc 2
div
ldl 1
bsr facL
ajs -1
ldr RR
ldc 2
mul
ldc 2
div
ne
ldc 2147483647
and
annote SP 0 0 red "Result of ne"
ldc 2
mul
ldc 2
div
or
ldc 2147483647
and
annote SP 0 0 red "Result of or"
brf main_29_5_31_9iff
ldl 1
ldl 2
ldl 1
bsr facI
ajs -1
ldr RR
ldl 1
bsr facL
ajs -1
ldr RR
ldc 0
bsr _refplus
bsr _malloc
ldr RR
stma 0 2
annote RR 0 0 black "list value"
annote RR 1 1 red "list pointer"
ldr RR
annote SP 0 0 red "Allocated on heap"
ldc 2147483647
add
bsr _refplus
bsr _malloc
ldr RR
stma 0 2
annote RR 0 0 black "list value"
annote RR 1 1 red "list pointer"
ldr RR
annote SP 0 0 red "Allocated on heap"
ldc 2147483647
add
bsr _refplus
bsr _malloc
ldr RR
stma 0 2
annote RR 0 0 black "list value"
annote RR 1 1 red "list pointer"
ldr RR
annote SP 0 0 red "Allocated on heap"
ldc 2147483647
add
bsr _refplus
bsr _malloc
ldr RR
stma 0 2
annote RR 0 0 black "list value"
annote RR 1 1 red "list pointer"
ldr RR
annote SP 0 0 red "Allocated on heap"
ldc 2147483647
add
bsr printIntList
ajs -1
ldc 0
ldl 3
str R6
bsr _refplus
stl 3
ldr R6
bsr _refmin
ajs -1
bra main_29_5_31_9ife
main_29_5_31_9iff:
main_29_5_31_9ife:
ldl 1
ldc 2
mul
ldc 2
div
ldc 1
ldc 2
mul
ldc 2
div
add
ldc 2147483647
and
annote SP 0 0 red "Result of add"
ldl 1
str R6
bsr _refplus
stl 1
ldr R6
bsr _refmin
ajs -1
bra main_29_5whilestart
main_29_5whileend:
ldl 3
bsr printBool
ajs -1
bra _main_ret
_main_ret:
ldl 2
bsr _refmin
ldl 1
bsr _refmin
ldl 3
bsr _refmin
unlink
ret
__endmain:
bra __endprintBool
printBool: link 0
ldl -2
bsr _refplus
ajs -1
annote MP -2 -2 green "Function argument bool"
ldl -2
brf printBool_110_261iff
ldc 84
ldc 114
ldc 117
ldc 101
ldc 0
bsr _refplus
bsr _malloc
ldr RR
stma 0 2
annote RR 0 0 black "list value"
annote RR 1 1 red "list pointer"
ldr RR
annote SP 0 0 red "Allocated on heap"
ldc 2147483647
add
bsr _refplus
bsr _malloc
ldr RR
stma 0 2
annote RR 0 0 black "list value"
annote RR 1 1 red "list pointer"
ldr RR
annote SP 0 0 red "Allocated on heap"
ldc 2147483647
add
bsr _refplus
bsr _malloc
ldr RR
stma 0 2
annote RR 0 0 black "list value"
annote RR 1 1 red "list pointer"
ldr RR
annote SP 0 0 red "Allocated on heap"
ldc 2147483647
add
bsr _refplus
bsr _malloc
ldr RR
stma 0 2
annote RR 0 0 black "list value"
annote RR 1 1 red "list pointer"
ldr RR
annote SP 0 0 red "Allocated on heap"
ldc 2147483647
add
bsr printString
ajs -1
bra printBool_110_261ife
printBool_110_261iff:
ldc 70
ldc 97
ldc 108
ldc 115
ldc 101
ldc 0
bsr _refplus
bsr _malloc
ldr RR
stma 0 2
annote RR 0 0 black "list value"
annote RR 1 1 red "list pointer"
ldr RR
annote SP 0 0 red "Allocated on heap"
ldc 2147483647
add
bsr _refplus
bsr _malloc
ldr RR
stma 0 2
annote RR 0 0 black "list value"
annote RR 1 1 red "list pointer"
ldr RR
annote SP 0 0 red "Allocated on heap"
ldc 2147483647
add
bsr _refplus
bsr _malloc
ldr RR
stma 0 2
annote RR 0 0 black "list value"
annote RR 1 1 red "list pointer"
ldr RR
annote SP 0 0 red "Allocated on heap"
ldc 2147483647
add
bsr _refplus
bsr _malloc
ldr RR
stma 0 2
annote RR 0 0 black "list value"
annote RR 1 1 red "list pointer"
ldr RR
annote SP 0 0 red "Allocated on heap"
ldc 2147483647
add
bsr _refplus
bsr _malloc
ldr RR
stma 0 2
annote RR 0 0 black "list value"
annote RR 1 1 red "list pointer"
ldr RR
annote SP 0 0 red "Allocated on heap"
ldc 2147483647
add
bsr printString
ajs -1
printBool_110_261ife:
bra _printBool_ret
_printBool_ret:
ldl -2
bsr _refmin
unlink
ret
__endprintBool:
bra __endprintIntList
printIntList: link 0
ldl -2
bsr _refplus
ajs -1
annote MP -2 -2 green "Function argument l"
ldc 91
trap 1
ldl -2
ldl -2
ldc 0
eq
str RR
ldr RR
ldc 0
eq
ldc 2147483647
and
annote SP 0 0 black ".tl value"
brf printIntList_110_386iff
ldl -2
lds 0
ldc 0
eq
brt __aborthead
ldc 2147483647
sub
ldh 0
annote SP 0 0 black ".hd value"
ldc 2
mul
ldc 2
div
trap 0
ldl -2
lds 0
ldc 0
eq
brt __aborttail
ldc 2147483647
sub
ldh 1
annote SP 0 0 black ".tl value"
ldl -2
str R6
bsr _refplus
stl -2
ldr R6
bsr _refmin
ajs -1
bra printIntList_110_386ife
printIntList_110_386iff:
printIntList_110_386ife:
printIntList_110_449whilestart:
ldl -2
ldl -2
ldc 0
eq
str RR
ldr RR
ldc 0
eq
ldc 2147483647
and
annote SP 0 0 black ".tl value"
brf printIntList_110_449whileend
ldc 44
ldc 32
ldc 0
bsr _refplus
bsr _malloc
ldr RR
stma 0 2
annote RR 0 0 black "list value"
annote RR 1 1 red "list pointer"
ldr RR
annote SP 0 0 red "Allocated on heap"
ldc 2147483647
add
bsr _refplus
bsr _malloc
ldr RR
stma 0 2
annote RR 0 0 black "list value"
annote RR 1 1 red "list pointer"
ldr RR
annote SP 0 0 red "Allocated on heap"
ldc 2147483647
add
bsr printString
ajs -1
ldl -2
lds 0
ldc 0
eq
brt __aborthead
ldc 2147483647
sub
ldh 0
annote SP 0 0 black ".hd value"
ldc 2
mul
ldc 2
div
trap 0
ldl -2
lds 0
ldc 0
eq
brt __aborttail
ldc 2147483647
sub
ldh 1
annote SP 0 0 black ".tl value"
ldl -2
str R6
bsr _refplus
stl -2
ldr R6
bsr _refmin
ajs -1
bra printIntList_110_449whilestart
printIntList_110_449whileend:
ldc 93
trap 1
bra _printIntList_ret
_printIntList_ret:
ldl -2
bsr _refmin
unlink
ret
__endprintIntList:
bra __endprintString
printString: link 0
ldl -2
bsr _refplus
ajs -1
annote MP -2 -2 green "Function argument str"
printString_110_155whilestart:
ldl -2
ldl -2
ldc 0
eq
str RR
ldr RR
ldc 0
eq
ldc 2147483647
and
annote SP 0 0 black ".tl value"
brf printString_110_155whileend
ldl -2
lds 0
ldc 0
eq
brt __aborthead
ldc 2147483647
sub
ldh 0
annote SP 0 0 black ".hd value"
trap 1
ldl -2
lds 0
ldc 0
eq
brt __aborttail
ldc 2147483647
sub
ldh 1
annote SP 0 0 black ".tl value"
ldl -2
str R6
bsr _refplus
stl -2
ldr R6
bsr _refmin
ajs -1
bra printString_110_155whilestart
printString_110_155whileend:
bra _printString_ret
_printString_ret:
ldl -2
bsr _refmin
unlink
ret
__endprintString:
bra __endreverse
reverse: link 1
ldl -2
bsr _refplus
ajs -1
annote MP -2 -2 green "Function argument list"
ldc 0
bsr _refplus
stl 1
annote MP 1 1 green "Local variable accu"
reverse_67_5whilestart:
ldl -2
ldl -2
ldc 0
eq
str RR
ldr RR
ldc 0
eq
ldc 2147483647
and
annote SP 0 0 black ".tl value"
brf reverse_67_5whileend
ldl -2
lds 0
ldc 0
eq
brt __aborthead
ldc 2147483647
sub
ldh 0
annote SP 0 0 black ".hd value"
ldl 1
bsr _refplus
bsr _malloc
ldr RR
stma 0 2
annote RR 0 0 black "list value"
annote RR 1 1 red "list pointer"
ldr RR
annote SP 0 0 red "Allocated on heap"
ldc 2147483647
add
ldl 1
str R6
bsr _refplus
stl 1
ldr R6
bsr _refmin
ajs -1
ldl -2
lds 0
ldc 0
eq
brt __aborttail
ldc 2147483647
sub
ldh 1
annote SP 0 0 black ".tl value"
ldl -2
str R6
bsr _refplus
stl -2
ldr R6
bsr _refmin
ajs -1
bra reverse_67_5whilestart
reverse_67_5whileend:
ldl 1
str RR
bra _reverse_ret
_reverse_ret:
ldl 1
bsr _refmin
ldl -2
bsr _refmin
unlink
ret
__endreverse:
bra __endsquareOddNumbers
squareOddNumbers: link 0
ldl -2
bsr _refplus
ajs -1
annote MP -2 -2 green "Function argument list"
squareOddNumbers_102_5whilestart:
ldl -2
ldl -2
ldc 0
eq
str RR
ldr RR
ldc 0
eq
ldc 2147483647
and
annote SP 0 0 black ".tl value"
ldc 2
mul
ldc 2
div
ldl -2
lds 0
ldc 0
eq
brt __aborthead
ldc 2147483647
sub
ldh 0
annote SP 0 0 black ".hd value"
ldc 2
mul
ldc 2
div
ldc 2
ldc 2
mul
ldc 2
div
mod
ldc 2147483647
and
annote SP 0 0 red "Result of mod"
ldc 2
mul
ldc 2
div
ldc 0
ldc 2
mul
ldc 2
div
eq
ldc 2147483647
and
annote SP 0 0 red "Result of eq"
ldc 2
mul
ldc 2
div
and
ldc 2147483647
and
annote SP 0 0 red "Result of and"
brf squareOddNumbers_102_5whileend
ldl -2
lds 0
ldc 0
eq
brt __aborttail
ldc 2147483647
sub
ldh 1
annote SP 0 0 black ".tl value"
ldl -2
str R6
bsr _refplus
stl -2
ldr R6
bsr _refmin
ajs -1
bra squareOddNumbers_102_5whilestart
squareOddNumbers_102_5whileend:
ldl -2
ldl -2
ldc 0
eq
str RR
ldr RR
ldc 0
eq
ldc 2147483647
and
annote SP 0 0 black ".tl value"
brf squareOddNumbers_105_5iff
ldl -2
lds 0
ldc 0
eq
brt __aborthead
ldc 2147483647
sub
ldh 0
annote SP 0 0 black ".hd value"
ldc 2
mul
ldc 2
div
ldl -2
lds 0
ldc 0
eq
brt __aborthead
ldc 2147483647
sub
ldh 0
annote SP 0 0 black ".hd value"
ldc 2
mul
ldc 2
div
mul
ldc 2147483647
and
annote SP 0 0 red "Result of mul"
bsr _refplus
ldl -2
ldc 2147483647
sub
lds 0
lda 0
bsr _refmin
ajs -1
sta 0
ldl -2
lds 0
ldc 0
eq
brt __aborttail
ldc 2147483647
sub
ldh 1
annote SP 0 0 black ".tl value"
bsr squareOddNumbers
ajs -1
ldr RR
bsr _refplus
ldl -2
ldc 2147483647
sub
lds 0
lda 1
bsr _refmin
ajs -1
sta 1
bra squareOddNumbers_105_5ife
squareOddNumbers_105_5iff:
squareOddNumbers_105_5ife:
ldl -2
str RR
bra _squareOddNumbers_ret
_squareOddNumbers_ret:
ldl -2
bsr _refmin
unlink
ret
__endsquareOddNumbers:
bra __endswap
swap: link 1
ldl -2
bsr _refplus
ajs -1
annote MP -2 -2 green "Function argument tuple"
ldl -2
ldc 2147483647
sub
ldh 0
annote SP 0 0 black ".fst value"
bsr _refplus
stl 1
annote MP 1 1 green "Local variable tmp"
ldl -2
ldc 2147483647
sub
ldh 1
annote SP 0 0 black ".snd value"
bsr _refplus
ldl -2
ldc 2147483647
sub
lds 0
lda 0
bsr _refmin
ajs -1
sta 0
ldl 1
bsr _refplus
ldl -2
ldc 2147483647
sub
lds 0
lda 1
bsr _refmin
ajs -1
sta 1
ldl -2
str RR
bra _swap_ret
_swap_ret:
ldl 1
bsr _refmin
ldl -2
bsr _refmin
unlink
ret
__endswap:
bra __endswapCopy
swapCopy: link 0
ldl -2
bsr _refplus
ajs -1
annote MP -2 -2 green "Function argument pair"
ldl -2
ldc 2147483647
sub
ldh 1
annote SP 0 0 black ".snd value"
bsr _refplus
ldl -2
ldc 2147483647
sub
ldh 0
annote SP 0 0 black ".fst value"
bsr _refplus
bsr _malloc
ldr RR
stma 0 2
annote RR 0 0 black "Tuple.fst"
annote RR 1 1 black "Tuple.snd"
ldr RR
annote SP 0 0 red "Allocated on heap"
ldc 2147483647
add
str RR
bra _swapCopy_ret
_swapCopy_ret:
ldl -2
bsr _refmin
unlink
ret
__endswapCopy:
bsr main
